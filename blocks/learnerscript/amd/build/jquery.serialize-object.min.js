!function(e,r){if("function"==typeof define&&define.amd)define(["exports","jquery"],function(e,i){return r(e,i)});else if("undefined"!=typeof exports){var i=require("jquery");r(exports,i)}else r(e,e.jQuery||e.Zepto||e.ender||e.$)}(this,function(e,u){var f={validate:/^[a-z_][a-z0-9_]*(?:\[(?:\d*|[a-z0-9_]+)\])*$/i,key:/[a-z0-9_]+|(?=\[\])/gi,push:/^$/,fixed:/^\d+$/,named:/^[a-z0-9_]+$/i};function i(t,r){var n={},i={};function a(e,i,r){return e[i]=r,e}function s(e){return void 0===i[e]&&(i[e]=0),i[e]++}function e(){return n}this.addPair=function(e){if(!f.validate.test(e.name))return this;var i=function(e,i){for(var r,t=e.match(f.key);void 0!==(r=t.pop());){if(f.push.test(r))i=a([],s(e.replace(/\[\]$/,"")),i);else f.fixed.test(r)?i=a([],r,i):f.named.test(r)&&(i=a({},r,i))}return i}(e.name,function(e){switch(u('[name="'+e.name+'"]',r).attr("type")){case"checkbox":return"on"===e.value||e.value;default:return e.value}}(e));return n=t.extend(!0,n,i),this},this.addPairs=function(e){if(!t.isArray(e))throw new Error("formSerializer.addPairs expects an Array");for(var i=0,r=e.length;i<r;i++)this.addPair(e[i]);return this},this.serialize=e,this.serializeJSON=function(){return JSON.stringify(e())}}return i.patterns=f,i.serializeObject=function(){return new i(u,this).addPairs(this.serializeArray()).serialize()},i.serializeJSON=function(){return new i(u,this).addPairs(this.serializeArray()).serializeJSON()},void 0!==u.fn&&(u.fn.serializeObject=i.serializeObject,u.fn.serializeJSON=i.serializeJSON),e.FormSerializer=i});